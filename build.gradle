plugins {
    id 'java'
    id 'org.springframework.boot' version "$springBootVersion"
    id 'io.spring.dependency-management' version "$springBootDependencyManagementVersion"
    id "org.openapi.generator" version "$openapiGeneratorVersion"
}

group = 'pl.zajavka'
version = '1.0-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // spring
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    //db
    implementation 'org.flywaydb:flyway-core'
    runtimeOnly 'org.postgresql:postgresql'

    // annotations
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"

    // api
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springDocOpenApiVersion}"
    implementation "org.openapitools:jackson-databind-nullable:${jacksonDatabindNullableVersion}"
    implementation "javax.annotation:javax.annotation-api:${javaxAnnotationApiVersion}"
    implementation "io.swagger:swagger-annotations:${swaggerAnnotationsVersion}"
    implementation "com.google.code.findbugs:jsr305:${jsr305Version}"

    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // test
//    testRuntimeOnly 'com.h2database:h2'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.powermock:powermock-module-junit4:1.7.3'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.9'
}

openApiGenerate {
    generatorName = "java"
    library = "webclient"
    configOptions = [
            serializableModel   : "true",
            dateLibrary         : "java8",
            serializationLibrary: "jackson"
    ]
    outputDir = "$buildDir/generated-sources/openapi".toString()
    inputSpec = "$rootDir/src/main/resources/contracts/open-api.yaml".toString()
//    apiPackage = "pl.zajavka.infrastructure.zipCode.api"
//    modelPackage = "pl.zajavka.infrastructure.zipCode.model"

}

sourceSets {
    main {
        java.srcDirs += "$buildDir/generated-sources/openapi/src/main/java"
    }
}

compileJava.dependsOn tasks.openApiGenerate

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

compileJava.options.encoding = 'UTF-8'